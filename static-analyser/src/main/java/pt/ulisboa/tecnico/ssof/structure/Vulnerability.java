package pt.ulisboa.tecnico.ssof.structure;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.apache.commons.lang3.StringUtils;

public class Vulnerability {
	private String vulnerabilityType;
	private String vulnerableFunction;
	private String address;
	private String functionName;
	private String overflowVar;
	private String overflownVar;
	private String overflownAddress;
	private String operation;
	
	public Vulnerability() {}

	public Vulnerability(String vulnerabilityType, String vulnerableFunction){
		this.vulnerabilityType = vulnerabilityType;
		this.vulnerableFunction = vulnerableFunction;
	}


	public Vulnerability(String vulnerabilityType, String vulnerableFunction, String overflownAddress){
		this.vulnerabilityType = vulnerabilityType;
		this.vulnerableFunction = vulnerableFunction;
		this.overflownAddress = overflownAddress;
	}

	public Vulnerability(String vulnerabilityType, String vulnerableFunction, String overflowVar, String overflownVar){
		this.vulnerabilityType = vulnerabilityType;
		this.vulnerableFunction = vulnerableFunction;
		this.overflowVar = overflowVar;
		this.overflownVar = overflownVar;
	}
	
	@JsonProperty("vulnerability")
	public String getVulnerabilityType() {
		return vulnerabilityType;
	}
	
	public void setVulnerabilityType(String vulnerabilityType) {
		this.vulnerabilityType = vulnerabilityType;
	}
	
	@JsonProperty("vuln_function")
	public String getVulnerableFunction() {
		return vulnerableFunction;
	}
	
	public void setVulnerableFunction(String vulnerableFunction) {
		this.vulnerableFunction = vulnerableFunction;
	}
	
	@JsonProperty("address")
	public String getAddress() {
		return address;
	}
	
	public void setAddress(String address) {
		this.address = address;
	}
	
	@JsonProperty("fnname")
	public String getFunctionName() {
		return functionName;
	}
	
	public void setFunctionName(String functionName) {
		this.functionName = functionName;
	}
	
	@JsonProperty("overflow_var")
	public String getOverflowVar() {
		return overflowVar;
	}
	
	public void setOverflowVar(String overflowVar) {
		this.overflowVar = overflowVar;
	}
	
	@JsonProperty("overflown_var")
	public String getOverflownVar() {
		return overflownVar;
	}
	
	public void setOverflownVar(String overflownVar) {
		this.overflownVar = overflownVar;
	}
	
	@JsonProperty("overflown_address")
	public String getOverflownAddress() {
		return overflownAddress;
	}
	
	public void setOverflownAddress(String overflownAddress) {
		this.overflownAddress = overflownAddress;
	}
	
	@JsonProperty("op")
	public String getOperation() {
		return operation;
	}
	
	public void setOperation(String operation) {
		this.operation = operation;
	}

	@Override
	public boolean equals(Object obj) {
		if(obj instanceof Vulnerability){
			Vulnerability vulnerability = (Vulnerability) obj;
			return StringUtils.equals(this.vulnerabilityType, vulnerability.getVulnerabilityType()) &&
				   StringUtils.equals(this.vulnerableFunction, vulnerability.getVulnerableFunction()) &&
				   StringUtils.equals(this.address, vulnerability.getAddress()) &&
				   StringUtils.equals(this.functionName, vulnerability.getFunctionName()) &&
				   StringUtils.equals(this.overflowVar, vulnerability.getOverflowVar()) &&
				   StringUtils.equals(this.overflownVar, vulnerability.getOverflownVar()) &&
			       StringUtils.equals(this.overflownAddress, vulnerability.getOverflownAddress()) &&
				   StringUtils.equals(this.operation, vulnerability.getOperation());
		}
		return false;
	}
}